syntax = "proto3";

import "proto/context.proto";
import "proto/user_id.proto";

package grp;

message Group {
  // The unique ID of this group.
  // Ex. "GR4576963743584254779"
  string id = 1;

  // The name of this group (may be displayed to users).
  // Ex. "Tyler Williams Group"
  string name = 2;

  // Optional. The domains owned by this group.
  // Ex. "iterationinc.com"
  string owned_domain = 3;

  // True if this group has linked a Github token.
  bool github_linked = 4;

  // The unique URL segment for this group which is used
  // to construct nice-looking URLs for this group, such as
  // https://app.buildbuddy.com/join/:url-identifier
  //
  // May consist of only lowercase ASCII letters (a-z) and hyphens.
  //
  // Ex: "iteration-inc"
  string url_identifier = 5;
}

message JoinGroupRequest {
  // The unique ID of this group.
  // Ex. "GR4576963743584254779"
  string id = 1;
}

message JoinGroupResponse {}

message GetGroupRequest {
  // The unique URL segment for this group which is used
  // to construct nice-looking URLs for this group, such as
  // https://app.buildbuddy.com/join/:url-identifier
  //
  // May consist of only lowercase ASCII letters (a-z) and hyphens.
  //
  // Ex: "iteration-inc"
  string url_identifier = 1;
}

message GetGroupResponse {
  // The unique ID of the group.
  // Ex. "GR4576963743584254779"
  string id = 1;

  // The name of this group (may be displayed to users).
  // Ex. "Tyler Williams Group"
  string name = 2;

  // Optional. The domains owned by this group.
  // Ex. "iterationinc.com"
  string owned_domain = 3;
}

message GetGroupUsersRequest {
  // Request context.
  // This contains the group ID to get the users for.
  context.RequestContext request_context = 1;

  // Membership status filter (optional).
  GroupMembershipStatus membership_status = 2;
}

message GetGroupUsersResponse {
  // Users related to the group that match the request criteria.
  repeated DisplayUser users = 1;
}

message UpdateGroupMembershipRequest {
  context.RequestContext request_context = 1;

  // The user whose membership status is to be updated.
  user.UserId user_id = 2;

  // The membership status to assign to the user in relation to the
  // group ID provided in the request context.
  // If set to UNKNOWN_MEMBERSHIP_STATUS, the user is removed from the
  // group, and any membership requests are also deleted.
  GroupMembershipStatus membership_status = 3;
}

message UpdateGroupMembershipResponse {}

message CreateGroupRequest {
  // The name of this group (may be displayed to users).
  // Ex. "Tyler Williams Group"
  string name = 1;

  // Whether new users who sign up with an email that matches the
  // authenticated user's email will be automatically added to the
  // group.
  bool auto_populate_from_owned_domain = 2;

  // The unique URL segment for this group which is used
  // to construct nice-looking URLs for this group, such as
  // https://app.buildbuddy.com/join/:url-identifier
  //
  // May consist of only lowercase ASCII letters (a-z) and hyphens.
  //
  // Ex: "iteration-inc"
  string url_identifier = 3;
}

message CreateGroupResponse {
  // ID of the created group.
  // Ex. "GR4576963743584254779"
  string id = 1;
}

message UpdateGroupRequest {
  // The ID of the group to be updated.
  string id = 1;

  // The name of this group (may be displayed to users).
  // Ex. "Tyler Williams Group"
  string name = 2;

  // Whether new users who sign up with an email that matches the
  // authenticated user's email will be automatically added to the
  // group.
  bool auto_populate_from_owned_domain = 3;

  // The unique URL segment for this group which is used
  // to construct nice-looking URLs for this group, such as
  // https://app.buildbuddy.com/join/:url-identifier
  //
  // May consist of only lowercase ASCII letters (a-z) and hyphens.
  //
  // Ex: "iteration-inc"
  string url_identifier = 4;
}

message UpdateGroupResponse {}

enum GroupMembershipStatus {
  UNKNOWN_MEMBERSHIP_STATUS = 0;
  // The user is a member of the group.
  MEMBER = 1;
  // The user has requested to join the group but is not yet a member.
  REQUESTED = 2;
}
